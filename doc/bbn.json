[
    {
        "text": "Routing and navigation",
        "desc": "These functions are meant to be used in a configured BBN environment,\ni.e. a single page application where callback functions are already defined\nand bbn has been initiated through bbn.fn.init.\n",
        "value": "ajax",
        "items": [
            {
                "file": "ajax.js",
                "text": "abort",
                "desc": "Aborts (client side) the XHR corresponding to the given ID if it still exists",
                "value": "abort",
                "url": "bbn-js\/doc\/ajax\/abort"
            },
            {
                "file": "ajax.js",
                "text": "ajax",
                "desc": "Creates an XHR object and returns the Promise",
                "value": "ajax",
                "url": "bbn-js\/doc\/ajax\/ajax"
            },
            {
                "file": "ajax.js",
                "text": "callback",
                "desc": "Executes a serie of predefined actions once an Ajax request has been done",
                "value": "callback",
                "url": "bbn-js\/doc\/ajax\/callback"
            },
            {
                "file": "ajax.js",
                "text": "download",
                "desc": "Downloads a file with given filename from a URL",
                "value": "download",
                "url": "bbn-js\/doc\/ajax\/download"
            },
            {
                "file": "ajax.js",
                "text": "downloadContent",
                "desc": "Downloads a file with given filename from the given content",
                "value": "downloadContent",
                "url": "bbn-js\/doc\/ajax\/downloadContent"
            },
            {
                "file": "ajax.js",
                "text": "getLoader",
                "desc": "Finds the loader object corresponding to the given unique ID and returns it if found",
                "value": "getLoader",
                "url": "bbn-js\/doc\/ajax\/getLoader"
            },
            {
                "file": "ajax.js",
                "text": "getRequestId",
                "desc": "Returns a unique ID for a \"loader\" based on the URL, the data keys and the datatype",
                "value": "getRequestId",
                "url": "bbn-js\/doc\/ajax\/getRequestId"
            },
            {
                "file": "ajax.js",
                "text": "link",
                "desc": "Follows a link and if needed by sending the corresponding Ajax request and executing bbn.fn.defaultPreLinkFunction",
                "value": "link",
                "url": "bbn-js\/doc\/ajax\/link"
            },
            {
                "file": "ajax.js",
                "text": "post",
                "desc": "Creates a POST XHR through bbn.fn.ajax then launches bbn.fn.callback with the result",
                "value": "post",
                "url": "bbn-js\/doc\/ajax\/post"
            },
            {
                "file": "ajax.js",
                "text": "postOut",
                "desc": "Posts a request in a new window",
                "value": "postOut",
                "url": "bbn-js\/doc\/ajax\/postOut"
            },
            {
                "file": "ajax.js",
                "text": "setNavigationVars",
                "desc": "Changes the URL and the associated variables and updates the history",
                "value": "setNavigationVars",
                "url": "bbn-js\/doc\/ajax\/setNavigationVars"
            },
            {
                "file": "ajax.js",
                "text": "treatAjaxArguments",
                "desc": "Transforms unordered arguments into a configuratiuon object for Ajax shortcut functions",
                "value": "treatAjaxArguments",
                "url": "bbn-js\/doc\/ajax\/treatAjaxArguments"
            },
            {
                "file": "ajax.js",
                "text": "upload",
                "desc": "Uploads a file synchronously through an XHR indicating progress",
                "value": "upload",
                "url": "bbn-js\/doc\/ajax\/upload"
            }
        ]
    },
    {
        "text": "Forms and data",
        "desc": "",
        "value": "form",
        "items": [
            {
                "file": "form.js",
                "text": "addInputs",
                "desc": "Adds the given data to the given form by inserting hidden inputs",
                "value": "addInputs",
                "url": "bbn-js\/doc\/form\/addInputs"
            },
            {
                "file": "form.js",
                "text": "fieldValue",
                "desc": "Returns the value of a form's input, differenciating between checkboxes, radio and other inputs",
                "value": "fieldValue",
                "url": "bbn-js\/doc\/form\/fieldValue"
            },
            {
                "file": "form.js",
                "text": "formdata",
                "desc": "Returns all the data contained in a form as a single object",
                "value": "formdata",
                "url": "bbn-js\/doc\/form\/formdata"
            },
            {
                "file": "form.js",
                "text": "objectToFormData",
                "desc": false,
                "value": "objectToFormData",
                "url": "bbn-js\/doc\/form\/objectToFormData"
            },
            {
                "file": "form.js",
                "text": "submit",
                "desc": "Submit a form's data through an Ajax request",
                "value": "submit",
                "url": "bbn-js\/doc\/form\/submit"
            }
        ]
    },
    {
        "text": "History",
        "desc": "",
        "value": "history",
        "items": [
            {
                "file": "history.js",
                "text": "history",
                "desc": false,
                "value": "history",
                "url": "bbn-js\/doc\/history\/history"
            }
        ]
    },
    {
        "text": "Initialization",
        "desc": "",
        "value": "init",
        "items": [
            {
                "file": "init.js",
                "text": "init",
                "desc": "Initializes the library bbn basing on the given configuration object",
                "value": "init",
                "url": "bbn-js\/doc\/init\/init"
            }
        ]
    },
    {
        "text": "Locale and formatting",
        "desc": "",
        "value": "locale",
        "items": [
            {
                "file": "locale.js",
                "text": "date",
                "desc": "Returns a date object from the given argument",
                "value": "date",
                "url": "bbn-js\/doc\/locale\/date"
            },
            {
                "file": "locale.js",
                "text": "dateSQL",
                "desc": "Returns a date with SQL format",
                "value": "dateSQL",
                "url": "bbn-js\/doc\/locale\/dateSQL"
            },
            {
                "file": "locale.js",
                "text": "daysInMonth",
                "desc": "Returns the number of days of the month given in the date",
                "value": "daysInMonth",
                "url": "bbn-js\/doc\/locale\/daysInMonth"
            },
            {
                "file": "locale.js",
                "text": "fdate",
                "desc": false,
                "value": "fdate",
                "url": "bbn-js\/doc\/locale\/fdate"
            },
            {
                "file": "locale.js",
                "text": "fdatetime",
                "desc": false,
                "value": "fdatetime",
                "url": "bbn-js\/doc\/locale\/fdatetime"
            },
            {
                "file": "locale.js",
                "text": "ftime",
                "desc": false,
                "value": "ftime",
                "url": "bbn-js\/doc\/locale\/ftime"
            },
            {
                "file": "locale.js",
                "text": "getDay",
                "desc": false,
                "value": "getDay",
                "url": "bbn-js\/doc\/locale\/getDay"
            },
            {
                "file": "locale.js",
                "text": "money",
                "desc": "Returns the given value to money format basing on the given configuration",
                "value": "money",
                "url": "bbn-js\/doc\/locale\/money"
            }
        ]
    },
    {
        "text": "Miscellaneous functions",
        "desc": "",
        "value": "misc",
        "items": [
            {
                "file": "misc.js",
                "text": "arrayBuffer2String",
                "desc": false,
                "value": "arrayBuffer2String",
                "url": "bbn-js\/doc\/misc\/arrayBuffer2String"
            },
            {
                "file": "misc.js",
                "text": "canvasToImage",
                "desc": "Returns a canvas in a HTML element im",
                "value": "canvasToImage",
                "url": "bbn-js\/doc\/misc\/canvasToImage"
            },
            {
                "file": "misc.js",
                "text": "copy",
                "desc": "Copies to the clipboard the value of the given string",
                "value": "copy",
                "url": "bbn-js\/doc\/misc\/copy"
            },
            {
                "file": "misc.js",
                "text": "eraseCookie",
                "desc": "Erase the cookie corresponding to the given name",
                "value": "eraseCookie",
                "url": "bbn-js\/doc\/misc\/eraseCookie"
            },
            {
                "file": "misc.js",
                "text": "error",
                "desc": "Logs the given argument in the browser's console highlighting it with a red background",
                "value": "error",
                "url": "bbn-js\/doc\/misc\/error"
            },
            {
                "file": "misc.js",
                "text": "formatBytes",
                "desc": "Formats the value given in bytes",
                "value": "formatBytes",
                "url": "bbn-js\/doc\/misc\/formatBytes"
            },
            {
                "file": "misc.js",
                "text": "getCookie",
                "desc": "If it exsists returns the cookie corresponding to the given name",
                "value": "getCookie",
                "url": "bbn-js\/doc\/misc\/getCookie"
            },
            {
                "file": "misc.js",
                "text": "getDeviceType",
                "desc": "Returns the current device type",
                "value": "getDeviceType",
                "url": "bbn-js\/doc\/misc\/getDeviceType"
            },
            {
                "file": "misc.js",
                "text": "getEventData",
                "desc": "Returns a promise having the event's data as argument",
                "value": "getEventData",
                "url": "bbn-js\/doc\/misc\/getEventData"
            },
            {
                "file": "misc.js",
                "text": "getHTMLOfSelection",
                "desc": false,
                "value": "getHTMLOfSelection",
                "url": "bbn-js\/doc\/misc\/getHTMLOfSelection"
            },
            {
                "file": "misc.js",
                "text": "getPath",
                "desc": false,
                "value": "getPath",
                "url": "bbn-js\/doc\/misc\/getPath"
            },
            {
                "file": "misc.js",
                "text": "getTimeoff",
                "desc": "Returns the length of time the window has not been focused in seconds",
                "value": "getTimeoff",
                "url": "bbn-js\/doc\/misc\/getTimeoff"
            },
            {
                "file": "misc.js",
                "text": "happy",
                "desc": "Logs the given argument in the browser's console highlighting it with a green background",
                "value": "happy",
                "url": "bbn-js\/doc\/misc\/happy"
            },
            {
                "file": "misc.js",
                "text": "imageToCanvas",
                "desc": "Draws the given html image nto a canvas",
                "value": "imageToCanvas",
                "url": "bbn-js\/doc\/misc\/imageToCanvas"
            },
            {
                "file": "misc.js",
                "text": "imgToBase64",
                "desc": "Returns the tag for the image in base6",
                "value": "imgToBase64",
                "url": "bbn-js\/doc\/misc\/imgToBase64"
            },
            {
                "file": "misc.js",
                "text": "info",
                "desc": "Logs the given argument in the browser's console highlighting it with a blue background",
                "value": "info",
                "url": "bbn-js\/doc\/misc\/info"
            },
            {
                "file": "misc.js",
                "text": "isDesktopDevice",
                "desc": "Returns true if the current device type is a desktop",
                "value": "isDesktopDevice",
                "url": "bbn-js\/doc\/misc\/isDesktopDevice"
            },
            {
                "file": "misc.js",
                "text": "isFocused",
                "desc": "Checks whether the given elemet is focused or not",
                "value": "isFocused",
                "url": "bbn-js\/doc\/misc\/isFocused"
            },
            {
                "file": "misc.js",
                "text": "isMobile",
                "desc": "Returns true if the current browser is on a mobile device (smartphone or tablet)",
                "value": "isMobile",
                "url": "bbn-js\/doc\/misc\/isMobile"
            },
            {
                "file": "misc.js",
                "text": "isMobileDevice",
                "desc": "Returns true if the current device type is a mobile",
                "value": "isMobileDevice",
                "url": "bbn-js\/doc\/misc\/isMobileDevice"
            },
            {
                "file": "misc.js",
                "text": "isTabletDevice",
                "desc": "Returns true if the current device type is a tablet",
                "value": "isTabletDevice",
                "url": "bbn-js\/doc\/misc\/isTabletDevice"
            },
            {
                "file": "misc.js",
                "text": "log",
                "desc": "Logs the given arguments in the browser's console",
                "value": "log",
                "url": "bbn-js\/doc\/misc\/log"
            },
            {
                "file": "misc.js",
                "text": "selectElementText",
                "desc": "Selects the content of an element",
                "value": "selectElementText",
                "url": "bbn-js\/doc\/misc\/selectElementText"
            },
            {
                "file": "misc.js",
                "text": "setCookie",
                "desc": "Creates a cookie and assigns it to document.cookie",
                "value": "setCookie",
                "url": "bbn-js\/doc\/misc\/setCookie"
            },
            {
                "file": "misc.js",
                "text": "startChrono",
                "desc": "Starts a timer and gives it a name",
                "value": "startChrono",
                "url": "bbn-js\/doc\/misc\/startChrono"
            },
            {
                "file": "misc.js",
                "text": "stat",
                "desc": false,
                "value": "stat",
                "url": "bbn-js\/doc\/misc\/stat"
            },
            {
                "file": "misc.js",
                "text": "stopChrono",
                "desc": false,
                "value": "stopChrono",
                "url": "bbn-js\/doc\/misc\/stopChrono"
            },
            {
                "file": "misc.js",
                "text": "string2ArrayBuffer",
                "desc": false,
                "value": "string2ArrayBuffer",
                "url": "bbn-js\/doc\/misc\/string2ArrayBuffer"
            },
            {
                "file": "misc.js",
                "text": "timestamp",
                "desc": "Returns the timestamp of the given seconds if an argument is given, else returns the timestamp of new Date()",
                "value": "timestamp",
                "url": "bbn-js\/doc\/misc\/timestamp"
            },
            {
                "file": "misc.js",
                "text": "warning",
                "desc": "Logs the given argument in the browser's console highlighting it with a yellow background and red color",
                "value": "warning",
                "url": "bbn-js\/doc\/misc\/warning"
            }
        ]
    },
    {
        "text": "Objects and arrays operations",
        "desc": "",
        "value": "object",
        "items": [
            {
                "file": "object.js",
                "text": "arrayFromProp",
                "desc": "Creates and returns a new array made of the given property's values from the given array of objects",
                "value": "arrayFromProp",
                "url": "bbn-js\/doc\/object\/arrayFromProp"
            },
            {
                "file": "object.js",
                "text": "autoExtend",
                "desc": "Extends the bbn object by passing the namespace and the object it will merge with",
                "value": "autoExtend",
                "url": "bbn-js\/doc\/object\/autoExtend"
            },
            {
                "file": "object.js",
                "text": "clone",
                "desc": "Creates and returns a perfect clone - but different - from the given object",
                "value": "clone",
                "url": "bbn-js\/doc\/object\/clone"
            },
            {
                "file": "object.js",
                "text": "compare",
                "desc": "Performs a comparison between two values based on the given operator and returns a boolean",
                "value": "compare",
                "url": "bbn-js\/doc\/object\/compare"
            },
            {
                "file": "object.js",
                "text": "compareConditions",
                "desc": "Checks whether the given data object complies or not with the given filter",
                "value": "compareConditions",
                "url": "bbn-js\/doc\/object\/compareConditions"
            },
            {
                "file": "object.js",
                "text": "count",
                "desc": "Counts the number of objects matching the given filter in the given array",
                "value": "count",
                "url": "bbn-js\/doc\/object\/count"
            },
            {
                "file": "object.js",
                "text": "diffObj",
                "desc": "Returns an object describing the differences for transforming the first given object into the second",
                "value": "diffObj",
                "url": "bbn-js\/doc\/object\/diffObj"
            },
            {
                "file": "object.js",
                "text": "each",
                "desc": "Executes the provided function on each element of the given array",
                "value": "each",
                "url": "bbn-js\/doc\/object\/each"
            },
            {
                "file": "object.js",
                "text": "extend",
                "desc": "Merges the contents of two or more objects together into the first object",
                "value": "extend",
                "url": "bbn-js\/doc\/object\/extend"
            },
            {
                "file": "object.js",
                "text": "extendOut",
                "desc": "Returns a new object made of the properties from all the given objects",
                "value": "extendOut",
                "url": "bbn-js\/doc\/object\/extendOut"
            },
            {
                "file": "object.js",
                "text": "filter",
                "desc": "Returns a new array with only the data matching the given filter",
                "value": "filter",
                "url": "bbn-js\/doc\/object\/filter"
            },
            {
                "file": "object.js",
                "text": "filterToConditions",
                "desc": "Converts the given object 'filter' to a valid format of condition",
                "value": "filterToConditions",
                "url": "bbn-js\/doc\/object\/filterToConditions"
            },
            {
                "file": "object.js",
                "text": "findAll",
                "desc": "Retrieves all elements of a hierarchical array corresponding to the filter",
                "value": "findAll",
                "url": "bbn-js\/doc\/object\/findAll"
            },
            {
                "file": "object.js",
                "text": "fori",
                "desc": "Executes the provided function on each element of the given array",
                "value": "fori",
                "url": "bbn-js\/doc\/object\/fori"
            },
            {
                "file": "object.js",
                "text": "forir",
                "desc": "Executes the provided function on each element of the given array, going backward",
                "value": "forir",
                "url": "bbn-js\/doc\/object\/forir"
            },
            {
                "file": "object.js",
                "text": "getField",
                "desc": "Returns the value of the given field (property) from the first object matching the given filter in an array of objects",
                "value": "getField",
                "url": "bbn-js\/doc\/object\/getField"
            },
            {
                "file": "object.js",
                "text": "getProperty",
                "desc": "Returns the value of the given property from the given object",
                "value": "getProperty",
                "url": "bbn-js\/doc\/object\/getProperty"
            },
            {
                "file": "object.js",
                "text": "getRow",
                "desc": "Returns the first object matching the given filter in an array of objects",
                "value": "getRow",
                "url": "bbn-js\/doc\/object\/getRow"
            },
            {
                "file": "object.js",
                "text": "isSame",
                "desc": "Checks whether the data contained in the given objects is identical",
                "value": "isSame",
                "url": "bbn-js\/doc\/object\/isSame"
            },
            {
                "file": "object.js",
                "text": "iterate",
                "desc": "Executes the provided function on each property of the given object",
                "value": "iterate",
                "url": "bbn-js\/doc\/object\/iterate"
            },
            {
                "file": "object.js",
                "text": "map",
                "desc": "Returns a new array generated by the execution of a function for each item of the given array",
                "value": "map",
                "url": "bbn-js\/doc\/object\/map"
            },
            {
                "file": "object.js",
                "text": "move",
                "desc": "Moves an element to a different position within the given array",
                "value": "move",
                "url": "bbn-js\/doc\/object\/move"
            },
            {
                "file": "object.js",
                "text": "multiorder",
                "desc": "Sorts an array of objects based on a set of properties",
                "value": "multiorder",
                "url": "bbn-js\/doc\/object\/multiorder"
            },
            {
                "file": "object.js",
                "text": "numProperties",
                "desc": "Returns the number of properties contained in the object",
                "value": "numProperties",
                "url": "bbn-js\/doc\/object\/numProperties"
            },
            {
                "file": "object.js",
                "text": "order",
                "desc": "Sorts an array of objects based on the given property",
                "value": "order",
                "url": "bbn-js\/doc\/object\/order"
            },
            {
                "file": "object.js",
                "text": "pickValue",
                "desc": "Returns a random item from the given array",
                "value": "pickValue",
                "url": "bbn-js\/doc\/object\/pickValue"
            },
            {
                "file": "object.js",
                "text": "removeEmpty",
                "desc": "Returns a new array, having removed all elements deemed empty from the given array",
                "value": "removeEmpty",
                "url": "bbn-js\/doc\/object\/removeEmpty"
            },
            {
                "file": "object.js",
                "text": "removePrivateProp",
                "desc": "Returns an object with the original objects' properties starting with an alphanumeric character",
                "value": "removePrivateProp",
                "url": "bbn-js\/doc\/object\/removePrivateProp"
            },
            {
                "file": "object.js",
                "text": "search",
                "desc": "Retrieves the index of the array's first element corresponding to the given filter",
                "value": "search",
                "url": "bbn-js\/doc\/object\/search"
            },
            {
                "file": "object.js",
                "text": "shortenObj",
                "desc": "Shortens all the strings contained in the object properties or element in a array",
                "value": "shortenObj",
                "url": "bbn-js\/doc\/object\/shortenObj"
            },
            {
                "file": "object.js",
                "text": "sum",
                "desc": "Returns the sum of the given property or function for the array's elements matching the filter",
                "value": "sum",
                "url": "bbn-js\/doc\/object\/sum"
            },
            {
                "file": "object.js",
                "text": "toCSV",
                "desc": "Returns a CSV string from the given array of arrays or objects",
                "value": "toCSV",
                "url": "bbn-js\/doc\/object\/toCSV"
            },
            {
                "file": "object.js",
                "text": "unique",
                "desc": "Removes duplicate values from an array",
                "value": "unique",
                "url": "bbn-js\/doc\/object\/unique"
            }
        ]
    },
    {
        "text": "Size and resizing",
        "desc": "",
        "value": "size",
        "items": [
            {
                "file": "size.js",
                "text": "adjustHeight",
                "desc": "Adjusts the height of the element(s) given as argument",
                "value": "adjustHeight",
                "url": "bbn-js\/doc\/size\/adjustHeight"
            },
            {
                "file": "size.js",
                "text": "adjustSize",
                "desc": "Adjusts the size of the given elements",
                "value": "adjustSize",
                "url": "bbn-js\/doc\/size\/adjustSize"
            },
            {
                "file": "size.js",
                "text": "adjustWidth",
                "desc": "Adjusts the width of the element(s) given as argument",
                "value": "adjustWidth",
                "url": "bbn-js\/doc\/size\/adjustWidth"
            },
            {
                "file": "size.js",
                "text": "formatSize",
                "desc": "Returns the value of size for element htm",
                "value": "formatSize",
                "url": "bbn-js\/doc\/size\/formatSize"
            },
            {
                "file": "size.js",
                "text": "getScrollBarSize",
                "desc": "Retutns the size of the scrollbar realative to the current environment",
                "value": "getScrollBarSize",
                "url": "bbn-js\/doc\/size\/getScrollBarSize"
            },
            {
                "file": "size.js",
                "text": "toggleFullScreen",
                "desc": "Toggles the fullscreen mode",
                "value": "toggleFullScreen",
                "url": "bbn-js\/doc\/size\/toggleFullScreen"
            }
        ]
    },
    {
        "text": "String operations",
        "desc": "",
        "value": "string",
        "items": [
            {
                "file": "string.js",
                "text": "baseName",
                "desc": "Returns the name of the element indicated by path given to it as an argument",
                "value": "baseName",
                "url": "bbn-js\/doc\/string\/baseName"
            },
            {
                "file": "string.js",
                "text": "br2nl",
                "desc": "Replaces the html <br> tag with new line characters '\\ n' if present in the string",
                "value": "br2nl",
                "url": "bbn-js\/doc\/string\/br2nl"
            },
            {
                "file": "string.js",
                "text": "camelize",
                "desc": "Returns the string passed as an argument in camelize mode",
                "value": "camelize",
                "url": "bbn-js\/doc\/string\/camelize"
            },
            {
                "file": "string.js",
                "text": "camelToCss",
                "desc": "Returns the string passed as an argument in camelize mode for css",
                "value": "camelToCss",
                "url": "bbn-js\/doc\/string\/camelToCss"
            },
            {
                "file": "string.js",
                "text": "correctCase",
                "desc": "Converts the first character of the string to uppercase",
                "value": "correctCase",
                "url": "bbn-js\/doc\/string\/correctCase"
            },
            {
                "file": "string.js",
                "text": "dirName",
                "desc": "Returns the path of the folder containing the last hierarchical element of the path",
                "value": "dirName",
                "url": "bbn-js\/doc\/string\/dirName"
            },
            {
                "file": "string.js",
                "text": "escapeRegExp",
                "desc": "Returns a string escaped",
                "value": "escapeRegExp",
                "url": "bbn-js\/doc\/string\/escapeRegExp"
            },
            {
                "file": "string.js",
                "text": "fileExt",
                "desc": "Gets the extension from a file's name",
                "value": "fileExt",
                "url": "bbn-js\/doc\/string\/fileExt"
            },
            {
                "file": "string.js",
                "text": "hex2rgb",
                "desc": "Convert an hexadecimmal string to RGB",
                "value": "hex2rgb",
                "url": "bbn-js\/doc\/string\/hex2rgb"
            },
            {
                "file": "string.js",
                "text": "html2text",
                "desc": "Convert text in html format to plain text",
                "value": "html2text",
                "url": "bbn-js\/doc\/string\/html2text"
            },
            {
                "file": "string.js",
                "text": "md5",
                "desc": "Converts and returns the argument passed in a string in md5 format",
                "value": "md5",
                "url": "bbn-js\/doc\/string\/md5"
            },
            {
                "file": "string.js",
                "text": "nl2br",
                "desc": "Replaces all new line characters '\\ n' with html tag '<br>'",
                "value": "nl2br",
                "url": "bbn-js\/doc\/string\/nl2br"
            },
            {
                "file": "string.js",
                "text": "percent",
                "desc": "Returns the value of the proportion giving the percentage and the total from where to be calculated",
                "value": "percent",
                "url": "bbn-js\/doc\/string\/percent"
            },
            {
                "file": "string.js",
                "text": "printf",
                "desc": false,
                "value": "printf",
                "url": "bbn-js\/doc\/string\/printf"
            },
            {
                "file": "string.js",
                "text": "quotes2html",
                "desc": "Replace quotes in ASCII cod",
                "value": "quotes2html",
                "url": "bbn-js\/doc\/string\/quotes2html"
            },
            {
                "file": "string.js",
                "text": "randomInt",
                "desc": "Returns a random integer",
                "value": "randomInt",
                "url": "bbn-js\/doc\/string\/randomInt"
            },
            {
                "file": "string.js",
                "text": "randomString",
                "desc": "Returns a random String with random lenght",
                "value": "randomString",
                "url": "bbn-js\/doc\/string\/randomString"
            },
            {
                "file": "string.js",
                "text": "removeAccents",
                "desc": "Returns the string passed as an argument without accents",
                "value": "removeAccents",
                "url": "bbn-js\/doc\/string\/removeAccents"
            },
            {
                "file": "string.js",
                "text": "removeTrailingChars",
                "desc": false,
                "value": "removeTrailingChars",
                "url": "bbn-js\/doc\/string\/removeTrailingChars"
            },
            {
                "file": "string.js",
                "text": "repeat",
                "desc": "Returns a string which is the repetition of the first argument for the number passed in the second argument",
                "value": "repeat",
                "url": "bbn-js\/doc\/string\/repeat"
            },
            {
                "file": "string.js",
                "text": "replaceAll",
                "desc": "Looks for and replaces parts of string with what we want",
                "value": "replaceAll",
                "url": "bbn-js\/doc\/string\/replaceAll"
            },
            {
                "file": "string.js",
                "text": "rgb2hex",
                "desc": "Convert an RGB string to hexadecimal",
                "value": "rgb2hex",
                "url": "bbn-js\/doc\/string\/rgb2hex"
            },
            {
                "file": "string.js",
                "text": "roundDecimal",
                "desc": false,
                "value": "roundDecimal",
                "url": "bbn-js\/doc\/string\/roundDecimal"
            },
            {
                "file": "string.js",
                "text": "sanitize",
                "desc": "Removes all unacceptable characters in a DOM node",
                "value": "sanitize",
                "url": "bbn-js\/doc\/string\/sanitize"
            },
            {
                "file": "string.js",
                "text": "shorten",
                "desc": "Shortens the given string after *len* characters",
                "value": "shorten",
                "url": "bbn-js\/doc\/string\/shorten"
            },
            {
                "file": "string.js",
                "text": "uniqString",
                "desc": "Create a unique string in md5 format",
                "value": "uniqString",
                "url": "bbn-js\/doc\/string\/uniqString"
            }
        ]
    },
    {
        "text": "Styling",
        "desc": "",
        "value": "style",
        "items": [
            {
                "file": "style.js",
                "text": "addColors",
                "desc": "Adds the given color to the object bbn.var.colors in order to be able to us",
                "value": "addColors",
                "url": "bbn-js\/doc\/style\/addColors"
            },
            {
                "file": "style.js",
                "text": "center",
                "desc": "Centers the given element by giving it a position absolute",
                "value": "center",
                "url": "bbn-js\/doc\/style\/center"
            },
            {
                "file": "style.js",
                "text": "colorToHex",
                "desc": "Returns the hex color of the given rgb or color name",
                "value": "colorToHex",
                "url": "bbn-js\/doc\/style\/colorToHex"
            },
            {
                "file": "style.js",
                "text": "lightenDarkenHex",
                "desc": "Takes color in hex format and lightens or darkens it with the given value",
                "value": "lightenDarkenHex",
                "url": "bbn-js\/doc\/style\/lightenDarkenHex"
            }
        ]
    },
    {
        "text": "Type check functions",
        "desc": "",
        "value": "type",
        "items": [
            {
                "file": "type.js",
                "text": "isArray",
                "desc": "Returns true if the given argument is array",
                "value": "isArray",
                "url": "bbn-js\/doc\/type\/isArray"
            },
            {
                "file": "type.js",
                "text": "isBlob",
                "desc": false,
                "value": "isBlob",
                "url": "bbn-js\/doc\/type\/isBlob"
            },
            {
                "file": "type.js",
                "text": "isCanvas",
                "desc": "Returns true if the given argumen is a Canvas",
                "value": "isCanvas",
                "url": "bbn-js\/doc\/type\/isCanvas"
            },
            {
                "file": "type.js",
                "text": "isColor",
                "desc": "Intended to check if the argument provided is a color",
                "value": "isColor",
                "url": "bbn-js\/doc\/type\/isColor"
            },
            {
                "file": "type.js",
                "text": "isDate",
                "desc": "Returns true if the given argument is a date object",
                "value": "isDate",
                "url": "bbn-js\/doc\/type\/isDate"
            },
            {
                "file": "type.js",
                "text": "isDimension",
                "desc": "Returns true if the given value is a valid CSS dimension string or a number, false otherwise",
                "value": "isDimension",
                "url": "bbn-js\/doc\/type\/isDimension"
            },
            {
                "file": "type.js",
                "text": "isDom",
                "desc": "Returns true if the given argument is a dom element",
                "value": "isDom",
                "url": "bbn-js\/doc\/type\/isDom"
            },
            {
                "file": "type.js",
                "text": "isEmail",
                "desc": "Intended to check if the argument provided is an e-mail address written correctl",
                "value": "isEmail",
                "url": "bbn-js\/doc\/type\/isEmail"
            },
            {
                "file": "type.js",
                "text": "isEmpty",
                "desc": "Checks if the argument is empty or not",
                "value": "isEmpty",
                "url": "bbn-js\/doc\/type\/isEmpty"
            },
            {
                "file": "type.js",
                "text": "isIterable",
                "desc": "Returns true if the given object can be iterated as an array (numerically)",
                "value": "isIterable",
                "url": "bbn-js\/doc\/type\/isIterable"
            },
            {
                "file": "type.js",
                "text": "isNull",
                "desc": "Returns true if the given argument is null",
                "value": "isNull",
                "url": "bbn-js\/doc\/type\/isNull"
            },
            {
                "file": "type.js",
                "text": "isNumber",
                "desc": "Returns true if the given argument is a numbe",
                "value": "isNumber",
                "url": "bbn-js\/doc\/type\/isNumber"
            },
            {
                "file": "type.js",
                "text": "isObject",
                "desc": "Returns true if the given argument is an object",
                "value": "isObject",
                "url": "bbn-js\/doc\/type\/isObject"
            },
            {
                "file": "type.js",
                "text": "isPercent",
                "desc": "Returns true if the given argument is a percentage",
                "value": "isPercent",
                "url": "bbn-js\/doc\/type\/isPercent"
            },
            {
                "file": "type.js",
                "text": "isString",
                "desc": "Returns true if the given argument is a string",
                "value": "isString",
                "url": "bbn-js\/doc\/type\/isString"
            },
            {
                "file": "type.js",
                "text": "isURL",
                "desc": false,
                "value": "isURL",
                "url": "bbn-js\/doc\/type\/isURL"
            },
            {
                "file": "type.js",
                "text": "isValidDimension",
                "desc": "Returns true if the given value is a valid CSS dimension string, false otherwise",
                "value": "isValidDimension",
                "url": "bbn-js\/doc\/type\/isValidDimension"
            },
            {
                "file": "type.js",
                "text": "isValue",
                "desc": "Returns true if the given argument is not null or type object or array",
                "value": "isValue",
                "url": "bbn-js\/doc\/type\/isValue"
            },
            {
                "file": "type.js",
                "text": "isVue",
                "desc": "Returns true if the given argumen is a VueJS object",
                "value": "isVue",
                "url": "bbn-js\/doc\/type\/isVue"
            }
        ]
    }
]